# Load necessary libraries
library(haven)
library(dplyr)
library(car)
library(boot)
library(writexl)
library(performance)

# Load your data
data_raw <- read_sav("data/forskerlinje_friskestudenter_rettet_16_april.sav")

# Fit MANOVA models
model <- manova(cbind(BRIEF_AI_T, BRIEF_MI_T) ~ as.factor(KJONN) + agree + 
                  consci + neuro + BDIsum + BAIsum + SumbisNoFour, 
                data = data_raw)

# Fit linear models for univariate analysis
lm_BRIEF_AI_T <- lm(BRIEF_AI_T ~ as.factor(KJONN) + agree + consci + 
                      neuro + BDIsum + BAIsum + SumbisNoFour, data = data_raw)
lm_BRIEF_MI_T <- lm(BRIEF_MI_T ~ as.factor(KJONN) + agree + consci + neuro + 
                      BDIsum + BAIsum + SumbisNoFour, data = data_raw)

# Summarize the models
summary_lm_BRIEF_AI_T <- summary(lm_BRIEF_AI_T)
summary_lm_BRIEF_MI_T <- summary(lm_BRIEF_MI_T)

# Define bootstrap functions
coef_function <- function(data, indices) {
  d <- data[indices,]
  fit <- lm(BRIEF_AI_T ~ as.factor(KJONN) + agree + consci + neuro + BDIsum + BAIsum + SumbisNoFour, data = d)
  return(coef(fit))
}

coef_function_MI <- function(data, indices) {
  d <- data[indices,]
  fit <- lm(BRIEF_MI_T ~ as.factor(KJONN) + agree + consci + neuro + BDIsum + BAIsum + SumbisNoFour, data = d)
  return(coef(fit))
}

# Set the seed for reproducibility
set.seed(1337)

# Perform bootstrap
reps_AI <- boot(data=data_raw, statistic=coef_function, R=2000)
reps_MI <- boot(data=data_raw, statistic=coef_function_MI, R=2000)

# Function to print point estimates and confidence intervals
print_ci <- function(boot_results, model_name, model_summary) {
  cat("\nPoint Estimates and Confidence Intervals for Model", model_name, ":\n")
  coef_names <- names(model_summary$coefficients[, "Estimate"])
  point_estimates <- model_summary$coefficients[, "Estimate"]
  
  for (i in 1:length(coef_names)) {
    ci <- tryCatch({
      boot.ci(boot_results, type = "norm", index = i)
    }, warning = function(w) {
      return(NULL)
    }, error = function(e) {
      return(NULL)
    })
    
    normal_ci <- if (!is.null(ci) && !is.null(ci$normal)) ci$normal[c(2,3)] else c(NA, NA)
    cat(coef_names[i], ": Point Estimate = ", sprintf("%.4f", point_estimates[i]), 
        ", CI = [", sprintf("%.4f, %.4f", normal_ci[1], normal_ci[2]), "]\n")
  }
}

# Print CIs and point estimates for BRIEF_AI_T
print_ci(reps_AI, "BRIEF_AI_T", summary_lm_BRIEF_AI_T)

# Print CIs and point estimates for BRIEF_MI_T
print_ci(reps_MI, "BRIEF_MI_T", summary_lm_BRIEF_MI_T)

# Convert bootstrap results to a data frame
bootstrap_results_AI <- as.data.frame(reps_AI$t)
colnames(bootstrap_results_AI) <- names(coef(lm_BRIEF_AI_T))  # Set column names based on the model coefficients

# Similarly for MI model if needed
bootstrap_results_MI <- as.data.frame(reps_MI$t)
colnames(bootstrap_results_MI) <- names(coef(lm_BRIEF_MI_T))

# Write the data frames to Excel files
write_xlsx(list(BRIEF_AI_T = bootstrap_results_AI), "bri_boot.xlsx")
write_xlsx(list(BRIEF_MI_T = bootstrap_results_MI), "mi_boot.xlsx")